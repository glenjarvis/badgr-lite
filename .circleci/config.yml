# Python CircleCI 2.1 configuration file
#
version: 2.1
jobs:
#  setup:
#    steps:
#      - run:
#          name: Install Dependencies
#          command: |
#            echo "Setup"

  test:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Pipfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install Dependencies
          command: |
             pipenv install --dev
             pipenv check

      - save_cache:
          paths:
            - $HOME/.local/share/virtualenvs/project-zxI9dQ-Q
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}

      - run:
          name: Run Tests
          command: |
            # It is currently unknown where eQF46Ow3 comes from
            source $HOME/.local/share/virtualenvs/project-zxI9dQ-Q/bin/activate
            python setup.py test

  code_coverage:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Pipfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Install Dependencies
          command: |
             pipenv install --dev
             pipenv check

      - save_cache:
          paths:
            - $HOME/.local/share/virtualenvs/project-zxI9dQ-Q
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}

      - run:
          name: Calculate and upload code coverage
          command: |
            source $HOME/.local/share/virtualenvs/project-zxI9dQ-Q/bin/activate
            pip install .
            # ^^ ModuleNotFoundError: No module named 'badgr_lite'
            pipenv run coverage run tests/test_badgr_lite.py
            pipenv run codecov --token $CODECOV_TOKEN


workflows:
  version: 2
  full_suite:
    jobs:
      - test
      - code_coverage:
          context: code_coverage
